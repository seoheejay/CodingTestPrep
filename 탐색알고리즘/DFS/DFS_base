#DFS : 깊이 우선 탐색 알고리즘
      특정한 경로로 탐색하다가 특정한 상황에서 최대한 깊숙이 들어가서 노드를 방문한 후,
      다시 돌아가 다른 경로로 탐색하는 알고리즘이다

#동작 과정
1.탐색 시작 노드를 스택에 삽입하고 방문 처리를 한다
2.스택의 최상단 노드에 방문하지 않은 인접 노드가 있으면 그 인접 노드를 스택에 넣고 방문 처리를 한다  
  방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼낸다
3. 2번의 과정을 더 이상 수행할 수 없을 때까지 반복한다

> 일반적으로 인접한 노드 중에서 방문하지 않은 노드가 여러 개 있으면 번호가 낮은 순서부터 처리한다

#스택 자료구조에 기초한다. 실제로는 스택 쓰지 않아도 되며 
탐색 수행함에 있어서 데이터 개수가 N개인 경우 O(N)의 시간이 소요된다
---------------------------------------------------------------------------------------
#DFS 메서드 정의
def dfs(graph,v,visited):
  #현재 노드를 방문 처리
  visited[v] = True
  print(v, end='')
  #현재 노드와 연결된 다른 노드를 재귀적으로 방문
  for i in graph[v]:
    if not visited[i]:
      dfs(graph, i , visited)
#각 노드가 연결된 정보를 리스트 자료형으로 표현(2차원 리스트)
graph = [
  [], [2,3,8],[1,7],[1,4,5],[3,5],[3,4],[7],[2,6,8],[1,7]
]
#각 노드가 방문된 정보를 리스트 자료형으로 표현(1차원 리스트)
visited = [False]*9
#정의된 DFS 함수 호출
dfs(graph,1,visited)

