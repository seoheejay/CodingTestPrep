#두 방식의 차이
코딩 테스트를 위해 학습하는 거라 > 메모리, 속도 측면에서 살펴봐야함
-인접행렬 : 모든 관계를 저장하므로, 노드 개수 많을수록 메모리 불필요하게 낭비됨
-인접리스트 : 연결된 정보만을 저장하기에 메모리 효율적으로 사용, 
            but 따라서 인접행렬에 비해 특정 두 노드가 연결되어 있는지에 대한 정보를 얻는 속도가 느리다
            왜냐 연결된 데이터 하나씩 확인해야 하기에(ex. 앞에서부터 차례대로)
>> 그러므로 특정 노드와 연결된 모든 인접 노드를 순회해야 하는 경우 : 인접리스트가 인-행에 비해 메모리 공간의 낭비가 적음

####인접행렬방식
#2차원 배열로 그래프의 연결 관계를 표현
#연결 되어 있지 않은 노드끼리는 무한의 비용이라고 작성

INF = 999999999

grap = [[0,7,5],[7,0,INF],[5,INF,0]]

print(grap)



####인접리스트방식 
#리스트로 그래프의 연결 관계를 표현
graph = [[] for _ in range(3)] #행이 3개인 2차원 리스트로 인접 리스트 표현

#노드0
graph[0].append((1,7))
graph[0].append((2,5))

#노드1
graph[1].append((0,7))

#노드2
graph[2].append((0,5))

print(graph)
