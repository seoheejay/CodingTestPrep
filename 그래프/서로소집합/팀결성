#난이도 2, 시간 제한2초, 메모리제한 128MB, 기출 핵심유형

#특정 원소가 속한 집합을 찾기
def find_parent(parent,x):
  if parent[x]!=x:
    parent[x] = find_parent(parent,parent[x])
  return parent[x]

#두 원소가 속한 집합 합치기
def union_parent(parent,a,b):
  a= find_parent(parent,a)
  b= find_parent(parent,b)
  if a<b:
    parent[b] = a
  else:
    parent[a]=b

n,m = map(int,input().split())
parent = [0]*(n+1)
#부모 테이블상에서 부모를 자기 자신으로 초기화
for i in range(0,n+1):
  parent[i]=i

#각 연산 하나씩 확인
for i in range(m):
  oper,a,b=map(int,input().split())
  #합집합 연산일 경우
  if oper == 0:
    union_parent(parent,a,b)
  #찾기 연산일 경우
  elif oper == 1:
    if find_parent(parent,a) == find_parent(parent,b):
      print('YES')
    else:
      print('NO')
