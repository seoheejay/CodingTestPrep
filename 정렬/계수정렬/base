#특정 조건 부합할 때, 매우 빠른 정렬 알고리즘 >>> "정수일 때만", "( 가장 큰 데이터 - 가장 작은 데이터 ) 의 차이가 1,000,000이 넘지 않을 때"
#이유 : 계수 정렬을 이용할 때는 '모든 범위를 담을 수 있는 크기의 리스트(배열)를 선언'해야 하기 때문
#따라서  1.데이터의 크기가 한정되어 있고 2.데이터의 크기가 많이 중복되어 있을수록 유리, 항상 사용할 수는 없다
#최악 O(N+K) : 앞에서부터 데이터를 하나씩 확인하면서 리스트에서 적절한 인덱스의 값을 1씩 증가(N) + 추후에 리스트의 각 인덱스에 해당하는 값들을 확인할 때 데이터 중 최댓값의 크기만큼 반복을 수행해야 하기 때문(K)

#####################################33

#모든 원소의 값이 0보다 크거나 같다고 가정
array = [7,5,9,0,3,1,6,2,9,1,4,8,0,5,2]
#모든 범위를 포함하는 리스트 선언(모든 값은 0으로 초기화)
count = [0]*(max(array) + 1)

for i in range(len(array)):
  count[array[i]] += 1 #각 데이터에 해당하는 인덱스의 값 증가

for i in range(len(count)): #리스트에 기록된 정렬 정보 확인
  for j in range(count[i]):
    print(i, end=' ') 
